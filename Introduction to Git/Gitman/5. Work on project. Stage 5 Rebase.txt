Description
For now, we don't have any new features for the development, so we can finish the work and apply the changes to the main branch. Keep in mind that it's important to preserve the history of commits in the main. You can do it through the merge or rebase. You've already tried the merge operation, so let's get acquainted with rebase.

Objectives
This stage requires the exact sequence of git commands, but you can always abort the rebase and try the task again with the following command:

git rebase --abort
First, go to the develop branch and start the rebase to main with this command:

git rebase main
Oops! It seems that git has problems with auto-merging the main.py file and warns you about it:

CONFLICT (content): Merge conflict in main.py
Open the main.py in an editor and alter the content. You should keep the call to the main function, and the printing of Hello, world! to the terminal.

Then add the file to the git index (staging area) and continue the rebase:

git rebase --continue
Now, your task is finished.


-> git checkout develop
-> git rebase main
-> add the below code in main.py

def main() -> None:
    name = input("What's your name? ")
    print(f"Hello, {name}!")
    print("Nice to meet you!")


if __name__ == "__main__":
    print("Hello, world!")
    main() 

-> git add .
-> git commit -m "Greet user by the name"